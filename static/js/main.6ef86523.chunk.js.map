{"version":3,"sources":["hooks/useApplicationState.tsx","hooks/useSocket.ts","socketsHelpers.ts","components/button/button.tsx","components/canvas/canvas.tsx","utils/gameCodeGen.tsx","components/modal/modal.tsx","components/newGameModal/newGame.tsx","components/waitingModal/waitingModal.tsx","components/gameView/gameView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["defaultState","clientRole","playerTurn","inviteCode","gameState","turnsLeft","subject","appStateContext","React","AppStateProvider","children","appState","Provider","value","useAppState","state","setState","joinAsHost","oldState","joinAsGuest","leaveGame","startGame","guestTurnEnded","endGuestTurn","startGuestTurn","startHostTurn","currentTurns","setGameOver","setNewTurns","console","log","process","socket","io","on","useSocket","bindSocket","event","cb","off","Button","onclick","className","onClick","e","stopPropagation","Canvas","playerLiftedPen","playerActive","canvasCtxRef","useRef","useState","drawing","setDrawing","x","y","prevPos","setPrevPos","paint","ctx","brushStart","brushEnd","beginPath","moveTo","lineTo","stroke","clearCanvas","useCallback","context","current","clearRect","useEffect","lineWidth","lineJoin","lineCap","strokeStyle","unSubscribers","data","lineStart","lineEnd","alert","forEach","unSub","width","height","onMouseMove","start","end","nativeEvent","offsetX","offsetY","emit","onMouseDown","onMouseUp","ref","canvas","getContext","CHARS","genRandChar","val","Math","floor","random","length","Modal","NewGameModel","showRoomNotFound","setRoomNotFound","joinKey","setJoinKey","room","inviteKey","Array","fill","map","_","i","a","charPos","needsDash","join","style","color","onChange","target","type","placeholder","WaitingModal","GameView","endTurn","unbind","newSubject","getSubject","handlePlayerLiftedPen","isPlayersTurn","currentTurn","choices","round","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ef86523.chunk.js","sourcesContent":["import * as React from \"react\";\n\nexport type ClientRole = \"host\" | \"guest\" | null;\ntype GameState = \"LOBBY\" | \"WAITING_FOR_PLAYER\" | \"IN_PROGRESS\" | \"OVER\";\ntype AppState = {\n  clientRole: ClientRole;\n  playerTurn: ClientRole;\n  inviteCode: string;\n  gameState: GameState;\n  turnsLeft: number;\n  subject: string;\n};\n\nconst defaultState: AppState = {\n  clientRole: null,\n  playerTurn: \"host\",\n  inviteCode: \"\",\n  gameState: \"LOBBY\",\n  turnsLeft: 15,\n  subject: ''\n};\n\nconst appStateContext = React.createContext<\n  [AppState, React.Dispatch<React.SetStateAction<AppState>>]\n>([defaultState, () => {}]);\n\nexport const AppStateProvider: React.FC = ({ children }) => {\n  const appState = React.useState(defaultState);\n  const { Provider } = appStateContext;\n  return <Provider value={appState}>{children}</Provider>;\n};\n\n\n\nexport const useAppState = () => {\n  const [state, setState] = React.useContext(appStateContext);\n  return {\n    state,\n    joinAsHost: (inviteCode: string) =>\n      setState((oldState) => ({\n        ...oldState,\n        clientRole: \"host\",\n        gameState: \"WAITING_FOR_PLAYER\",\n        inviteCode,\n      })),\n    joinAsGuest: () =>\n      setState((oldState) => ({\n        ...oldState,\n        clientRole: \"guest\",\n        gameState: \"IN_PROGRESS\",\n      })),\n    leaveGame: () => {\n      setState(defaultState);\n    },\n    startGame: (subject: string) => {\n      setState((oldState) => ({ ...oldState, gameState: \"IN_PROGRESS\", subject }));\n    },\n    guestTurnEnded: () => {\n      setState((oldState) => {\n        if (oldState.turnsLeft > 1) {\n          return {\n            ...oldState,\n            gameState: \"IN_PROGRESS\",\n            playerTurn: 'guest',\n            turnsLeft: oldState.turnsLeft - 1,\n          };\n        } else {\n          return { ...oldState, gameState: \"OVER\" };\n        }\n      });\n    },\n    endGuestTurn: () => {\n      setState((oldState) => ({ ...oldState, playerTurn: \"host\" }));\n    },\n    startGuestTurn: (turnsLeft) => {\n      setState((oldState) => ({ ...oldState, turnsLeft, playerTurn: \"guest\" }));\n    },\n    startHostTurn: () => {\n      setState((oldState) => {\n        const currentTurns = oldState.turnsLeft - 1\n        if (currentTurns > 1) {\n          return {\n            ...oldState,\n            playerTurn: 'host',\n            turnsLeft: currentTurns,\n          };\n        } else {\n          return { ...oldState, gameState: \"OVER\" };\n        }\n      });\n    },\n    setGameOver: () => {\n      setState((oldState) => ({ ...oldState, gameState: \"OVER\" }));\n    },\n    setNewTurns: (turnsLeft) => {\n      setState((oldState) => ({ ...oldState, turnsLeft }));\n    }\n  };\n};\n\n// const otherPlayer = (currentPlayer: ClientRole): ClientRole => {\n//   return currentPlayer === \"guest\" ? \"host\" : \"guest\";\n// };\n","import { io } from \"socket.io-client\";\nconsole.log(process.env.REACT_APP_API_ROOT!)\nconst socket = io(process.env.REACT_APP_API_ROOT!);\n\nsocket.on('connect', () => {\n  console.log('client connected')\n})\n\nexport const useSocket = () => {\n\n  return {\n    socket \n  };\n};\n","import { Socket } from \"socket.io-client\";\n\nexport const bindSocket = (socket: Socket, event: string, cb: (...args) => void) => {\n    socket.on(event, cb);\n    return () => socket.off(event);\n  };","import * as React from \"react\";\nimport \"./button.css\";\n\ntype ButtonProps = {\n  onclick: () => void;\n};\n\nexport const Button: React.FC<ButtonProps> = ({ children, onclick }) => {\n    const handleClick = (e :React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.stopPropagation()\n        onclick()\n    }\n    return (\n        <button className={\"button\"} onClick={handleClick}>{children}</button>\n      );    \n} ","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useAppState } from \"../../hooks/useApplicationState\";\nimport { useSocket } from \"../../hooks/useSocket\";\nimport { bindSocket } from \"../../socketsHelpers\";\nimport { Button } from \"../button/button\";\nimport \"./canvas.css\";\n\ntype Pos = {\n  x: number;\n  y: number;\n};\n\ntype CanvasProps = {\n  playerLiftedPen: () => void;\n  playerActive: boolean;\n};\n\nexport const Canvas: React.FC<CanvasProps> = ({\n  playerLiftedPen,\n  playerActive,\n}) => {\n  const canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\n  const [drawing, setDrawing] = useState(false);\n  const [prevPos, setPrevPos] = useState<Pos>({ x: 0, y: 0 });\n\n  const scale = 3;\n  const canvasWidth = 300 * scale;\n  const canvasHeight = 150 * scale;\n\n  const { socket } = useSocket();\n  const { leaveGame } = useAppState();\n\n  const paint = (ctx, brushStart: Pos, brushEnd: Pos) => {\n    ctx.beginPath();\n    ctx.moveTo(brushStart.x, brushStart.y);\n    ctx.lineTo(brushEnd.x, brushEnd.y);\n    ctx.stroke();\n  };\n\n  const clearCanvas = useCallback(() => {\n    const context = canvasCtxRef.current;\n    if (context) {\n      context.clearRect(0, 0, canvasWidth, canvasHeight);\n    }\n  }, [canvasHeight, canvasWidth]);\n\n  useEffect(() => {\n    const ctx = canvasCtxRef.current;\n    if (ctx) {\n      ctx.lineWidth = 3;\n      ctx.lineJoin = \"round\";\n      ctx.lineCap = \"round\";\n      ctx.strokeStyle = \"#000\";\n    }\n\n    const unSubscribers = [\n      bindSocket(socket, \"drawing\", (data) => {\n        const ctx = canvasCtxRef.current;\n        if (ctx) {\n          paint(ctx, data.lineStart, data.lineEnd);\n        }\n      }),\n      bindSocket(socket, \"clearCanvas\", () => {\n        clearCanvas();\n      }),\n\n      bindSocket(socket, \"hostLeft\", () => {\n        alert(\"The host left\");\n        leaveGame();\n      }),\n    ];\n\n    return () => unSubscribers.forEach((unSub) => unSub());\n  }, [leaveGame, clearCanvas, socket]);\n\n  const emitLine = (lineStart: Pos, lineEnd: Pos) => {\n    socket.emit(\"drawing\", { lineStart, lineEnd });\n  };\n\n  const handleMouseMove = (\n    e: React.MouseEvent<HTMLCanvasElement, MouseEvent>\n  ) => {\n    if (drawing && canvasCtxRef.current) {\n      const start = { x: prevPos.x, y: prevPos.y };\n      const end = {\n        x: e.nativeEvent.offsetX,\n        y: e.nativeEvent.offsetY,\n      };\n      paint(canvasCtxRef.current, start, end);\n      emitLine(start, end);\n      setPrevPos({ x: end.x, y: end.y });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDrawing(false);\n    if (playerActive) {\n      playerLiftedPen();\n    }\n  };\n\n  const handleMouseDown = (\n    e: React.MouseEvent<HTMLCanvasElement, MouseEvent>\n  ) => {\n    if(playerActive) {\n      setPrevPos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      setDrawing(true);\n    }\n  };\n\n  // const handleClear = () => {\n  //   clearCanvas();\n  //   socket.emit(\"clearCanvas\");\n  // };\n\n  const handleExit = () => {\n    socket.emit(\"leaveGame\");\n    leaveGame();\n  };\n\n  return (\n    <div className=\"canvas\">\n      <canvas\n        width={`${canvasWidth}px`}\n        height={`${canvasHeight}px`}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        ref={(canvas) => {\n          if (canvas) canvasCtxRef.current = canvas.getContext(\"2d\");\n        }}\n        className={\"canvas\"}\n      />\n      <div className=\"canvas-buttons\">\n        {/* <Button onclick={handleClear}>Clear</Button> */}\n        <Button onclick={handleExit}>Exit</Button>\n      </div>\n    </div>\n  );\n};\n","const CHARS = \"123456789abcdefghijklmnopqrstuvwxyz\";\nconst KEY_LENGTH = 9;\n\nexport const generateInviteKey = () =>\n  new Array(KEY_LENGTH)\n    .fill(null)\n    .map((_, i, a) => {\n      const charPos = i + 1;\n      const needsDash = charPos !== a.length && charPos % 3 === 0;\n      return `${genRandChar()}${needsDash ? \"-\" : \"\"}`;\n    })\n    .join(\"\");\n\nconst genRandChar = () => {\n  const val = Math.floor(Math.random() * CHARS.length);\n  return CHARS[val];\n};\n","import * as React from \"react\";\nimport './modal.css'\nexport const Modal: React.FC = ({ children }) => {\n  return <div className=\"modal\">\n    <div className=\"modal-content\">{children}</div></div>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useAppState } from \"../../hooks/useApplicationState\";\nimport { useSocket } from \"../../hooks/useSocket\";\nimport { bindSocket } from \"../../socketsHelpers\";\nimport { generateInviteKey } from \"../../utils/gameCodeGen\";\nimport { Button } from \"../button/button\";\nimport { Modal } from \"../modal/modal\";\n\nimport \"./newGame.css\";\n\nexport const NewGameModel = () => {\n  const { socket } = useSocket();\n  const { joinAsHost, joinAsGuest } = useAppState();\n  const [showRoomNotFound, setRoomNotFound] = useState(false);\n\n  const [joinKey, setJoinKey] = useState(\"\");\n\n  useEffect(() => {\n    const unSubscribers = [\n      bindSocket(socket, \"confirmGameCreated\", (room: string) => {\n        console.log(\"room created\");\n        joinAsHost(room);\n      }),\n      bindSocket(socket, \"confirmGameJoined\", () => {\n        console.log(\"room joined\");\n        setRoomNotFound(false);\n        joinAsGuest();\n      }),\n      bindSocket(socket, \"gameNotFound\", () => {\n        console.log(\"room joined\");\n        setRoomNotFound(true);\n      }),\n    ];\n\n    return () => unSubscribers.forEach(unSub => unSub())\n\n  }, [joinAsGuest, joinAsHost, socket]);\n\n  const handleStartGame = () => {\n    const inviteKey = generateInviteKey();\n    socket.emit(\"createRoom\", inviteKey);\n    console.log(\"start clicked\");\n  };\n\n  const handleJoinGame = () => {\n    console.log(\"join clicked\");\n    socket.emit(\"joinGame\", joinKey);\n  };\n\n  const handleJoinKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setJoinKey(e.target.value);\n  };\n\n  return (\n    <Modal>\n      <>\n        <Button onclick={handleStartGame}>Start new game</Button>\n        Join existing game\n        {showRoomNotFound && (\n          <span style={{ color: \"red\" }}>Room not Found</span>\n        )}\n        <input\n          onChange={handleJoinKeyChange}\n          type=\"text\"\n          placeholder=\"paste invite code...\"\n        />\n        <Button onclick={handleJoinGame}>Join existing game</Button>\n      </>\n    </Modal>\n  );\n};\n\n\n","import * as React from \"react\";\n\nimport { useAppState } from \"../../hooks/useApplicationState\";\n\nimport { Modal } from \"../modal/modal\";\n\nexport const WaitingModal = () => {\n  const {\n    state: { inviteCode },\n  } = useAppState();\n\n\n  return (\n    <Modal>\n      <p>Invite code: {inviteCode}</p>\n      <p>Waiting for player...</p>\n    </Modal>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { ClientRole, useAppState } from \"../../hooks/useApplicationState\";\nimport { useSocket } from \"../../hooks/useSocket\";\nimport { bindSocket } from \"../../socketsHelpers\";\nimport { Canvas } from \"../canvas/canvas\";\nimport { NewGameModel } from \"../newGameModal/newGame\";\nimport { WaitingModal } from \"../waitingModal/waitingModal\";\n\nimport \"./gameView.css\";\n\nexport const GameView = () => {\n  const {\n    state: { clientRole, gameState, playerTurn, turnsLeft, subject },\n    guestTurnEnded: endTurn,\n    startGuestTurn,\n    startGame,\n    setGameOver,\n    startHostTurn,\n    setNewTurns,\n    endGuestTurn,\n  } = useAppState();\n\n  const { socket } = useSocket();\n\n  useEffect(() => {\n    const unbind = [\n      bindSocket(socket, \"playerJoined\", () => {\n        console.log(\"player joined\");\n        const newSubject = getSubject();\n        startGame(newSubject);\n        socket.emit(\"startGameGuest\", { newSubject });\n      }),\n      bindSocket(socket, \"startGameGuest\", ({ newSubject }) => {\n        startGame(newSubject);\n      }),\n      bindSocket(socket, \"hostTurnOver\", ({ turnsLeft }) => {\n        startGuestTurn(turnsLeft);\n      }),\n      bindSocket(socket, \"guestTurnOver\", () => {\n        startHostTurn();\n      }),\n      bindSocket(socket, \"gameOver\", () => {\n        // set game over\n        setGameOver();\n      }),\n      bindSocket(socket, \"updateGuestTurns\", ({ turnsLeft }) => {\n        setNewTurns(turnsLeft);\n      }),\n    ];\n    return () => unbind.forEach((unbind) => unbind());\n  }, [socket, startGuestTurn, setGameOver, startGame, startHostTurn, setNewTurns]);\n\n  useEffect(() => {\n    if (clientRole === \"host\") {\n      if (gameState === \"OVER\") {\n        socket.emit(\"gameOver\");\n      } else if (playerTurn === \"guest\") {\n        socket.emit(\"hostTurnOver\", { turnsLeft });\n      } else {\n        console.log([ clientRole, socket, gameState, playerTurn])\n        socket.emit(\"updateGuestTurns\", { turnsLeft });\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clientRole, socket, gameState, playerTurn]);\n\n  const handlePlayerLiftedPen = useCallback(() => {\n    if (clientRole === \"host\") {\n      endTurn();\n    } else if (clientRole === \"guest\") {\n      // broadcast turn over\n      endGuestTurn();\n      socket.emit(\"guestTurnOver\");\n    }\n  }, [endTurn, socket, clientRole, endGuestTurn]);\n\n  return (\n    <>\n      <div className=\"turn-display\">\n        {gameState === \"IN_PROGRESS\" && (\n          <>\n            <h3>Draw a {subject}</h3>\n            <h4>Turns left: {turnsLeft}</h4>\n            <p>\n              Its {isPlayersTurn(clientRole, playerTurn) ? \"your\" : \"their\"}{\" \"}\n              turn\n            </p>\n          </>\n        )}\n        {gameState === \"OVER\" && <h3>Look what you made ! :D</h3>}\n      </div>\n      <Canvas\n        playerLiftedPen={handlePlayerLiftedPen}\n        playerActive={\n          gameState === \"IN_PROGRESS\" && isPlayersTurn(clientRole, playerTurn)\n        }\n      />\n      {clientRole === null && <NewGameModel />}\n      {gameState === \"WAITING_FOR_PLAYER\" && <WaitingModal />}\n    </>\n  );\n};\n\nconst isPlayersTurn = (clientRole: ClientRole, currentTurn: ClientRole) => {\n  return clientRole === currentTurn;\n};\n\nconst getSubject = () => {\n  const choices = [\n    \"penguin\",\n    \"rat\",\n    \"dinosaur\",\n    \"pikachu\",\n    \"cat\",\n    \"pickle Rick\",\n    \"robot\",\n    \"monkey\",\n  ];\n  return choices[Math.floor(Math.round(Math.random() * choices.length))];\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { GameView } from \"./components/gameView/gameView\";\nimport { AppStateProvider } from \"./hooks/useApplicationState\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppStateProvider>\n        <GameView />\n      </AppStateProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}